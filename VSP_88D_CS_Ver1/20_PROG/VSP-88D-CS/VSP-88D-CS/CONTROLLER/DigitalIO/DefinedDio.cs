using VSLibrary.Controller;
using VSP_88D_CS.Helpers;

namespace VSP_88D_CS.CONTROLLER.DigitalIO;

public class DefinedDio
{
    // Outputs
    public static IDigitalIOData I_EmgSwFront => _controllerManager.DIOData[eDI.I_EmgSwFront.GetDescription()];
    public static IDigitalIOData I_EmgSwRear => _controllerManager.DIOData[eDI.I_EmgSwRear.GetDescription()];
    public static IDigitalIOData I_DoorFrontLeft => _controllerManager.DIOData[eDI.I_DoorFrontLeft.GetDescription()];
    public static IDigitalIOData I_DoorFrontCenter => _controllerManager.DIOData[eDI.I_DoorFrontCenter.GetDescription()];
    public static IDigitalIOData I_DoorFrontRight => _controllerManager.DIOData[eDI.I_DoorFrontRight.GetDescription()];
    public static IDigitalIOData I_DoorLeft => _controllerManager.DIOData[eDI.I_DoorLeft.GetDescription()];
    public static IDigitalIOData I_DoorRight => _controllerManager.DIOData[eDI.I_DoorRight.GetDescription()];
    public static IDigitalIOData I_PumpOvld_Pm1 => _controllerManager.DIOData[eDI.I_PumpOvld_Pm1.GetDescription()];
    public static IDigitalIOData I_MainAirPressure => _controllerManager.DIOData[eDI.I_MainAirPressure.GetDescription()];
    public static IDigitalIOData I_Gas1Pressure => _controllerManager.DIOData[eDI.I_Gas1Pressure.GetDescription()];
    public static IDigitalIOData I_Gas2Pressure => _controllerManager.DIOData[eDI.I_Gas2Pressure.GetDescription()];
    public static IDigitalIOData I_VacValveOpen_Pm1 => _controllerManager.DIOData[eDI.I_VacValveOpen_Pm1.GetDescription()];
    public static IDigitalIOData I_ECoolOn_Pm1 => _controllerManager.DIOData[eDI.I_ECoolOn_Pm1.GetDescription()];
    public static IDigitalIOData I_MCoolOn_Pm1 => _controllerManager.DIOData[eDI.I_MCoolOn_Pm1.GetDescription()];
    public static IDigitalIOData I_ChamberUp_Pm1 => _controllerManager.DIOData[eDI.I_ChamberUp_Pm1.GetDescription()];
    public static IDigitalIOData I_ChamberDn_Pm1 => _controllerManager.DIOData[eDI.I_ChamberDn_Pm1.GetDescription()];
    public static IDigitalIOData I_PumpOilLevel_Pm1 => _controllerManager.DIOData[eDI.I_PumpOilLevel_Pm1.GetDescription()];
    public static IDigitalIOData I_LoadElevMgzChk_1 => _controllerManager.DIOData[eDI.I_LoadElevMgzChk_1.GetDescription()];
    public static IDigitalIOData I_LoadElevMgzChk_2 => _controllerManager.DIOData[eDI.I_LoadElevMgzChk_2.GetDescription()];
    public static IDigitalIOData I_LoadElevMgzChk_3 => _controllerManager.DIOData[eDI.I_LoadElevMgzChk_3.GetDescription()];
    public static IDigitalIOData I_LoadElevMgzChk_4 => _controllerManager.DIOData[eDI.I_LoadElevMgzChk_4.GetDescription()];
    public static IDigitalIOData I_Pusher1Overload => _controllerManager.DIOData[eDI.I_Pusher1Overload.GetDescription()];
    public static IDigitalIOData I_LoadElevStripChk_1 => _controllerManager.DIOData[eDI.I_LoadElevStripChk_1.GetDescription()];
    public static IDigitalIOData I_LoadElevStripChk_2 => _controllerManager.DIOData[eDI.I_LoadElevStripChk_2.GetDescription()];
    public static IDigitalIOData I_LoadElevStripChk_3 => _controllerManager.DIOData[eDI.I_LoadElevStripChk_3.GetDescription()];
    public static IDigitalIOData I_LoadElevStripChk_4 => _controllerManager.DIOData[eDI.I_LoadElevStripChk_4.GetDescription()];
    public static IDigitalIOData I_InBufStopperUp => _controllerManager.DIOData[eDI.I_InBufStopperUp.GetDescription()];
    public static IDigitalIOData I_InBufStopperDn => _controllerManager.DIOData[eDI.I_InBufStopperDn.GetDescription()];
    public static IDigitalIOData I_InBufDevArrival_1 => _controllerManager.DIOData[eDI.I_InBufDevArrival_1.GetDescription()];
    public static IDigitalIOData I_InBufDevArrival_2 => _controllerManager.DIOData[eDI.I_InBufDevArrival_2.GetDescription()];
    public static IDigitalIOData I_InBufDevArrival_3 => _controllerManager.DIOData[eDI.I_InBufDevArrival_3.GetDescription()];
    public static IDigitalIOData I_InBufDevArrival_4 => _controllerManager.DIOData[eDI.I_InBufDevArrival_4.GetDescription()];
    public static IDigitalIOData I_InBufCylFwd => _controllerManager.DIOData[eDI.I_InBufCylFwd.GetDescription()];
    public static IDigitalIOData I_InBufCylBwd => _controllerManager.DIOData[eDI.I_InBufCylBwd.GetDescription()];
    public static IDigitalIOData I_Pusher2Overload => _controllerManager.DIOData[eDI.I_Pusher2Overload.GetDescription()];
    public static IDigitalIOData I_Pusher2StripChk_1 => _controllerManager.DIOData[eDI.I_Pusher2StripChk_1.GetDescription()];
    public static IDigitalIOData I_Pusher2StripChk_2 => _controllerManager.DIOData[eDI.I_Pusher2StripChk_2.GetDescription()];
    public static IDigitalIOData I_Pusher2StripChk_3 => _controllerManager.DIOData[eDI.I_Pusher2StripChk_3.GetDescription()];
    public static IDigitalIOData I_Pusher2StripChk_4 => _controllerManager.DIOData[eDI.I_Pusher2StripChk_4.GetDescription()];
    public static IDigitalIOData I_Pusher2Up => _controllerManager.DIOData[eDI.I_Pusher2Up.GetDescription()];
    public static IDigitalIOData I_Pusher2Dn => _controllerManager.DIOData[eDI.I_Pusher2Dn.GetDescription()];
    public static IDigitalIOData I_OutBufFwd => _controllerManager.DIOData[eDI.I_OutBufFwd.GetDescription()];
    public static IDigitalIOData I_OutBufBwd => _controllerManager.DIOData[eDI.I_OutBufBwd.GetDescription()];
    public static IDigitalIOData I_ChamberOutStripChk_1 => _controllerManager.DIOData[eDI.I_ChamberOutStripChk_1.GetDescription()];
    public static IDigitalIOData I_ChamberOutStripChk_2 => _controllerManager.DIOData[eDI.I_ChamberOutStripChk_2.GetDescription()];
    public static IDigitalIOData I_ChamberOutStripChk_3 => _controllerManager.DIOData[eDI.I_ChamberOutStripChk_3.GetDescription()];
    public static IDigitalIOData I_ChamberOutStripChk_4 => _controllerManager.DIOData[eDI.I_ChamberOutStripChk_4.GetDescription()];
    public static IDigitalIOData I_Pusher3Overload => _controllerManager.DIOData[eDI.I_Pusher3Overload.GetDescription()];
    public static IDigitalIOData I_Pusher3Up => _controllerManager.DIOData[eDI.I_Pusher3Up.GetDescription()];
    public static IDigitalIOData I_Pusher3Dn => _controllerManager.DIOData[eDI.I_Pusher3Dn.GetDescription()];
    public static IDigitalIOData I_Pusher3Fwd => _controllerManager.DIOData[eDI.I_Pusher3Fwd.GetDescription()];
    public static IDigitalIOData I_Pusher3Bwd => _controllerManager.DIOData[eDI.I_Pusher3Bwd.GetDescription()];
    public static IDigitalIOData I_Pusher3DnEnable_1 => _controllerManager.DIOData[eDI.I_Pusher3DnEnable_1.GetDescription()];
    public static IDigitalIOData I_Pusher3DnEnable_2 => _controllerManager.DIOData[eDI.I_Pusher3DnEnable_2.GetDescription()];
    public static IDigitalIOData I_Pusher3DnEnable_3 => _controllerManager.DIOData[eDI.I_Pusher3DnEnable_3.GetDescription()];
    public static IDigitalIOData I_Pusher3DnEnable_4 => _controllerManager.DIOData[eDI.I_Pusher3DnEnable_4.GetDescription()];
    public static IDigitalIOData I_UnLoadElevStripChk_1 => _controllerManager.DIOData[eDI.I_UnLoadElevStripChk_1.GetDescription()];
    public static IDigitalIOData I_UnLoadElevStripChk_2 => _controllerManager.DIOData[eDI.I_UnLoadElevStripChk_2.GetDescription()];
    public static IDigitalIOData I_UnLoadElevStripChk_3 => _controllerManager.DIOData[eDI.I_UnLoadElevStripChk_3.GetDescription()];
    public static IDigitalIOData I_UnLoadElevStripChk_4 => _controllerManager.DIOData[eDI.I_UnLoadElevStripChk_4.GetDescription()];
    public static IDigitalIOData I_UnLoadElevMgzChk_1 => _controllerManager.DIOData[eDI.I_UnLoadElevMgzChk_1.GetDescription()];
    public static IDigitalIOData I_UnLoadElevMgzChk_2 => _controllerManager.DIOData[eDI.I_UnLoadElevMgzChk_2.GetDescription()];
    public static IDigitalIOData I_UnLoadElevMgzChk_3 => _controllerManager.DIOData[eDI.I_UnLoadElevMgzChk_3.GetDescription()];
    public static IDigitalIOData I_UnLoadElevMgzChk_4 => _controllerManager.DIOData[eDI.I_UnLoadElevMgzChk_4.GetDescription()];
    public static IDigitalIOData I_VisionOut => _controllerManager.DIOData[eDI.I_VisionOut.GetDescription()];
    public static IDigitalIOData I_VisionEnable => _controllerManager.DIOData[eDI.I_VisionEnable.GetDescription()];
    public static IDigitalIOData I_VisionError => _controllerManager.DIOData[eDI.I_VisionError.GetDescription()];
    public static IDigitalIOData I_Gas3Pressure => _controllerManager.DIOData[eDI.I_Gas3Pressure.GetDescription()];
    public static IDigitalIOData I_Gas4Pressure => _controllerManager.DIOData[eDI.I_Gas4Pressure.GetDescription()];
    public static IDigitalIOData I_Pusher2Overload2 => _controllerManager.DIOData[eDI.I_Pusher2Overload2.GetDescription()];
    public static IDigitalIOData I_Pusher2Overload3 => _controllerManager.DIOData[eDI.I_Pusher2Overload3.GetDescription()];
    public static IDigitalIOData I_Pusher2Overload4 => _controllerManager.DIOData[eDI.I_Pusher2Overload4.GetDescription()];
    public static IDigitalIOData I_LoadElevMgzChk_5 => _controllerManager.DIOData[eDI.I_LoadElevMgzChk_5.GetDescription()];
    public static IDigitalIOData I_LoadElevStripChk_5 => _controllerManager.DIOData[eDI.I_LoadElevStripChk_5.GetDescription()];
    public static IDigitalIOData I_InBufDevArrival_5 => _controllerManager.DIOData[eDI.I_InBufDevArrival_5.GetDescription()];
    public static IDigitalIOData I_Pusher2StripChk_5 => _controllerManager.DIOData[eDI.I_Pusher2StripChk_5.GetDescription()];
    public static IDigitalIOData I_ChamberOutStripChk_5 => _controllerManager.DIOData[eDI.I_ChamberOutStripChk_5.GetDescription()];
    public static IDigitalIOData I_Pusher3DnEnable_5 => _controllerManager.DIOData[eDI.I_Pusher3DnEnable_5.GetDescription()];
    public static IDigitalIOData I_UnLoadElevStripChk_5 => _controllerManager.DIOData[eDI.I_UnLoadElevStripChk_5.GetDescription()];
    public static IDigitalIOData I_UnLoadElevMgzChk_5 => _controllerManager.DIOData[eDI.I_UnLoadElevMgzChk_5.GetDescription()];
    public static IDigitalIOData I_LoadMgzTiltChk_1 => _controllerManager.DIOData[eDI.I_LoadMgzTiltChk_1.GetDescription()];
    public static IDigitalIOData I_LoadMgzTiltChk_2 => _controllerManager.DIOData[eDI.I_LoadMgzTiltChk_2.GetDescription()];
    public static IDigitalIOData I_LoadMgzTiltChk_3 => _controllerManager.DIOData[eDI.I_LoadMgzTiltChk_3.GetDescription()];
    public static IDigitalIOData I_LoadMgzTiltChk_4 => _controllerManager.DIOData[eDI.I_LoadMgzTiltChk_4.GetDescription()];
    public static IDigitalIOData I_UnldMgzTiltChk_1 => _controllerManager.DIOData[eDI.I_UnldMgzTiltChk_1.GetDescription()];
    public static IDigitalIOData I_UnldMgzTiltChk_2 => _controllerManager.DIOData[eDI.I_UnldMgzTiltChk_2.GetDescription()];
    public static IDigitalIOData I_UnldMgzTiltChk_3 => _controllerManager.DIOData[eDI.I_UnldMgzTiltChk_3.GetDescription()];
    public static IDigitalIOData I_UnldMgzTiltChk_4 => _controllerManager.DIOData[eDI.I_UnldMgzTiltChk_4.GetDescription()];
    public static IDigitalIOData I_IonizerAlarm => _controllerManager.DIOData[eDI.I_IonizerAlarm.GetDescription()];
    public static IDigitalIOData I_LaneFloatDetect => _controllerManager.DIOData[eDI.I_LaneFloatDetect.GetDescription()];
    public static IDigitalIOData I_Pusher1Overload2 => _controllerManager.DIOData[eDI.I_Pusher1Overload2.GetDescription()];
    public static IDigitalIOData I_Pusher1Overload3 => _controllerManager.DIOData[eDI.I_Pusher1Overload3.GetDescription()];
    public static IDigitalIOData I_Pusher1Overload4 => _controllerManager.DIOData[eDI.I_Pusher1Overload4.GetDescription()];
    public static IDigitalIOData I_Pusher1Overload5 => _controllerManager.DIOData[eDI.I_Pusher1Overload5.GetDescription()];
    public static IDigitalIOData I_Pusher2Overload5 => _controllerManager.DIOData[eDI.I_Pusher2Overload5.GetDescription()];
    public static IDigitalIOData I_ChamberInEdge => _controllerManager.DIOData[eDI.I_ChamberInEdge.GetDescription()];
    public static IDigitalIOData I_ChamberOutEdge => _controllerManager.DIOData[eDI.I_ChamberOutEdge.GetDescription()];
    public static IDigitalIOData I_Pusher3Overload2 => _controllerManager.DIOData[eDI.I_Pusher3Overload2.GetDescription()];
    public static IDigitalIOData I_Pusher3Overload3 => _controllerManager.DIOData[eDI.I_Pusher3Overload3.GetDescription()];
    public static IDigitalIOData I_Pusher3Overload4 => _controllerManager.DIOData[eDI.I_Pusher3Overload4.GetDescription()];
    public static IDigitalIOData I_Pusher3Overload5 => _controllerManager.DIOData[eDI.I_Pusher3Overload5.GetDescription()];
    public static IDigitalIOData I_N2Pressure_CJ => _controllerManager.DIOData[eDI.I_N2Pressure_CJ.GetDescription()];
    public static IDigitalIOData I_LoadElevMgzTiltCheck => _controllerManager.DIOData[eDI.I_LoadElevMgzTiltCheck.GetDescription()];
    public static IDigitalIOData I_UnldElevMgzTiltCheck => _controllerManager.DIOData[eDI.I_UnldElevMgzTiltCheck.GetDescription()];
    public static IDigitalIOData I_IonizerAlarm2 => _controllerManager.DIOData[eDI.I_IonizerAlarm2.GetDescription()];
    public static IDigitalIOData I_X069 => _controllerManager.DIOData[eDI.I_X069.GetDescription()];
    public static IDigitalIOData I_X06A => _controllerManager.DIOData[eDI.I_X06A.GetDescription()];
    public static IDigitalIOData I_X06B => _controllerManager.DIOData[eDI.I_X06B.GetDescription()];
    public static IDigitalIOData I_X06C => _controllerManager.DIOData[eDI.I_X06C.GetDescription()];
    public static IDigitalIOData I_X06D => _controllerManager.DIOData[eDI.I_X06D.GetDescription()];
    public static IDigitalIOData I_X06E => _controllerManager.DIOData[eDI.I_X06E.GetDescription()];
    public static IDigitalIOData I_X06F => _controllerManager.DIOData[eDI.I_X06F.GetDescription()];

    public static IDigitalIOData O_TowerRed => _controllerManager.DIOData[eDO.O_TowerRed.GetDescription()];
    public static IDigitalIOData O_TowerGreen => _controllerManager.DIOData[eDO.O_TowerGreen.GetDescription()];
    public static IDigitalIOData O_TowerYellow => _controllerManager.DIOData[eDO.O_TowerYellow.GetDescription()];
    public static IDigitalIOData O_Buzzer => _controllerManager.DIOData[eDO.O_Buzzer.GetDescription()];
    public static IDigitalIOData O_RfPwrOn => _controllerManager.DIOData[eDO.O_RfPwrOn.GetDescription()];
    public static IDigitalIOData O_VPumpOn => _controllerManager.DIOData[eDO.O_VPumpOn.GetDescription()];
    public static IDigitalIOData O_VValOpen => _controllerManager.DIOData[eDO.O_VValOpen.GetDescription()];
    public static IDigitalIOData O_GValOpen => _controllerManager.DIOData[eDO.O_GValOpen.GetDescription()];
    public static IDigitalIOData O_Mfc1Open => _controllerManager.DIOData[eDO.O_Mfc1Open.GetDescription()];
    public static IDigitalIOData O_Mfc2Open => _controllerManager.DIOData[eDO.O_Mfc2Open.GetDescription()];
    public static IDigitalIOData O_ECoolOn => _controllerManager.DIOData[eDO.O_ECoolOn.GetDescription()];
    public static IDigitalIOData O_MCoolOn => _controllerManager.DIOData[eDO.O_MCoolOn.GetDescription()];
    public static IDigitalIOData O_N2Purge => _controllerManager.DIOData[eDO.O_N2Purge.GetDescription()];
    public static IDigitalIOData O_AirPurge => _controllerManager.DIOData[eDO.O_AirPurge.GetDescription()];
    public static IDigitalIOData O_RfOn => _controllerManager.DIOData[eDO.O_RfOn.GetDescription()];
    public static IDigitalIOData O_ServoPwrOn => _controllerManager.DIOData[eDO.O_ServoPwrOn.GetDescription()];
    public static IDigitalIOData O_ChamberUp => _controllerManager.DIOData[eDO.O_ChamberUp.GetDescription()];
    public static IDigitalIOData O_ChamberDn => _controllerManager.DIOData[eDO.O_ChamberDn.GetDescription()];
    public static IDigitalIOData O_InBufStopperUp => _controllerManager.DIOData[eDO.O_InBufStopperUp.GetDescription()];
    public static IDigitalIOData O_InBufStopperDn => _controllerManager.DIOData[eDO.O_InBufStopperDn.GetDescription()];
    public static IDigitalIOData O_InBufFwd => _controllerManager.DIOData[eDO.O_InBufFwd.GetDescription()];
    public static IDigitalIOData O_InBufBwd => _controllerManager.DIOData[eDO.O_InBufBwd.GetDescription()];
    public static IDigitalIOData O_Pusher2Up => _controllerManager.DIOData[eDO.O_Pusher2Up.GetDescription()];
    public static IDigitalIOData O_Pusher2Dn => _controllerManager.DIOData[eDO.O_Pusher2Dn.GetDescription()];
    public static IDigitalIOData O_OutBufFwd => _controllerManager.DIOData[eDO.O_OutBufFwd.GetDescription()];
    public static IDigitalIOData O_OutBufBwd => _controllerManager.DIOData[eDO.O_OutBufBwd.GetDescription()];
    public static IDigitalIOData O_Pusher3Up => _controllerManager.DIOData[eDO.O_Pusher3Up.GetDescription()];
    public static IDigitalIOData O_Pusher3Dn => _controllerManager.DIOData[eDO.O_Pusher3Dn.GetDescription()];
    public static IDigitalIOData O_Pusher3Fwd => _controllerManager.DIOData[eDO.O_Pusher3Fwd.GetDescription()];
    public static IDigitalIOData O_Pusher3Bwd => _controllerManager.DIOData[eDO.O_Pusher3Bwd.GetDescription()];
    public static IDigitalIOData O_NC => _controllerManager.DIOData[eDO.O_NC.GetDescription()];
    public static IDigitalIOData O_NC1 => _controllerManager.DIOData[eDO.O_NC1.GetDescription()];
    public static IDigitalIOData O_InBufRollRun => _controllerManager.DIOData[eDO.O_InBufRollRun.GetDescription()];
    public static IDigitalIOData O_InBufRollSpd => _controllerManager.DIOData[eDO.O_InBufRollSpd.GetDescription()];
    public static IDigitalIOData O_OutBufRollRun => _controllerManager.DIOData[eDO.O_OutBufRollRun.GetDescription()];
    public static IDigitalIOData O_VisionTeach => _controllerManager.DIOData[eDO.O_VisionTeach.GetDescription()];
    public static IDigitalIOData O_VisionTrig => _controllerManager.DIOData[eDO.O_VisionTrig.GetDescription()];
    public static IDigitalIOData O_VisionBank1 => _controllerManager.DIOData[eDO.O_VisionBank1.GetDescription()];
    public static IDigitalIOData O_VisionBank2 => _controllerManager.DIOData[eDO.O_VisionBank2.GetDescription()];
    public static IDigitalIOData O_VisionBank3 => _controllerManager.DIOData[eDO.O_VisionBank3.GetDescription()];
    public static IDigitalIOData O_Mfc3Open => _controllerManager.DIOData[eDO.O_Mfc3Open.GetDescription()];
    public static IDigitalIOData O_Mfc4Open => _controllerManager.DIOData[eDO.O_Mfc4Open.GetDescription()];
    public static IDigitalIOData O_VisionReset => _controllerManager.DIOData[eDO.O_VisionReset.GetDescription()];
    public static IDigitalIOData O_NC8 => _controllerManager.DIOData[eDO.O_NC8.GetDescription()];
    public static IDigitalIOData O_NC9 => _controllerManager.DIOData[eDO.O_NC9.GetDescription()];
    public static IDigitalIOData O_NC10 => _controllerManager.DIOData[eDO.O_NC10.GetDescription()];
    public static IDigitalIOData O_NC11 => _controllerManager.DIOData[eDO.O_NC11.GetDescription()];
    public static IDigitalIOData O_NC12 => _controllerManager.DIOData[eDO.O_NC12.GetDescription()];
    public static IDigitalIOData O_IonizerOn => _controllerManager.DIOData[eDO.O_IonizerOn.GetDescription()];
    public static IDigitalIOData O_IonizerOn2 => _controllerManager.DIOData[eDO.O_IonizerOn2.GetDescription()];
    public static IDigitalIOData O_DoorUnlockFrontCenter => _controllerManager.DIOData[eDO.O_DoorUnlockFrontCenter.GetDescription()];
    public static IDigitalIOData O_DoorUnlockFrontRight => _controllerManager.DIOData[eDO.O_DoorUnlockFrontRight.GetDescription()];
    public static IDigitalIOData O_DoorUnlockLeft => _controllerManager.DIOData[eDO.O_DoorUnlockLeft.GetDescription()];
    public static IDigitalIOData O_DoorUnlockRight => _controllerManager.DIOData[eDO.O_DoorUnlockRight.GetDescription()];
    public static IDigitalIOData O_Y036 => _controllerManager.DIOData[eDO.O_Y036.GetDescription()];
    public static IDigitalIOData O_Y037 => _controllerManager.DIOData[eDO.O_Y037.GetDescription()];
    public static IDigitalIOData O_Y038 => _controllerManager.DIOData[eDO.O_Y038.GetDescription()];
    public static IDigitalIOData O_Y039 => _controllerManager.DIOData[eDO.O_Y039.GetDescription()];
    public static IDigitalIOData O_Y03A => _controllerManager.DIOData[eDO.O_Y03A.GetDescription()];
    public static IDigitalIOData O_Y03B => _controllerManager.DIOData[eDO.O_Y03B.GetDescription()];
    public static IDigitalIOData O_Y03C => _controllerManager.DIOData[eDO.O_Y03C.GetDescription()];
    public static IDigitalIOData O_Y03D => _controllerManager.DIOData[eDO.O_Y03D.GetDescription()];
    public static IDigitalIOData O_Y03E => _controllerManager.DIOData[eDO.O_Y03E.GetDescription()];
    public static IDigitalIOData O_Y03F => _controllerManager.DIOData[eDO.O_Y03F.GetDescription()];

    private static ControllerManager _controllerManager = null!;

    public static void Initialize(ControllerManager controllerManager)
    {
        _controllerManager = controllerManager
            ?? throw new ArgumentNullException(nameof(controllerManager));
    }
}
