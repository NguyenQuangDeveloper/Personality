<UserControl x:Class="VSP_88D_CS.Views.Setting.Sub.ParameterPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:VSP_88D_CS.ViewModels.Setting.Sub"
             mc:Ignorable="d"
             d:DesignHeight="560"
             d:DesignWidth="800"
             xmlns:converters="clr-namespace:VSP_88D_CS.Converters"
             xmlns:TemplateSelector="clr-namespace:VSP_88D_CS.Models.Setting"
             xmlns:vsText="clr-namespace:VSP_88D_CS.Common.TextBox"
             xmlns:VSControls="clr-namespace:VSLibrary.UIComponent.VSControls;assembly=VSLibrary"
             xmlns:vsl="clr-namespace:VSLibrary.UIComponent.Localization;assembly=VSLibrary"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:controls="clr-namespace:VSP_88D_CS.Common.Controls"
             d:DataContext="{d:DesignInstance Type=local:ParameterPageViewModel}">
    <UserControl.Resources>
        <!-- Definition of InverseBooleanConverter -->
        <!-- <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" /> -->
        <!-- <converters:Int64ToInt32Converter x:Key="Int64ToInt32Converter" /> -->
        <!-- <converters:BooleanToIconConverter x:Key="BooleanToIconConverter" /> -->
        <converters:BooleanConverter x:Key="BooleanConverter" />
        <converters:DoubleToStringConverter x:Key="DoubleToStringConverter" />
        <converters:ObjectToIntConverter x:Key="ObjectToIntConverter" />

        <!-- Defining a DataTemplate -->
        <!-- Number Template -->
        <DataTemplate x:Key="NumberTemplate">
            <vsText:VSTextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              IsOnlyNumber="True"
                              ToolTip="{Binding Tooltip}"
                              Margin="0,2,0,2"
                              Title="{Binding Parameter}"
                              MinValue="{Binding MinValue, Converter={StaticResource DoubleToStringConverter}, UpdateSourceTrigger=PropertyChanged}"
                              MaxValue="{Binding MaxValue, Converter={StaticResource DoubleToStringConverter}, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>
        <!-- CheckBox Template -->
        <DataTemplate x:Key="CheckBoxTemplate">
            <CheckBox IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanConverter}}"
                      IsEnabled="{Binding IsEditable}">
                <!--CheckBox.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding DisplayText}" />
                        <TextBlock Text=", " />
                        <TextBlock Text="{Binding AdditionalText}" Foreground="Gray" />
                    </StackPanel>
                </CheckBox.Content>-->
                <CheckBox.ToolTip>
                    <Binding Path="Tooltip"
                             FallbackValue="There is no description for this setting." />
                </CheckBox.ToolTip>
            </CheckBox>
        </DataTemplate>
        <!-- ComboBox Template -->
        <DataTemplate x:Key="ComboBoxTemplate">
            <ComboBox ItemsSource="{Binding ComboBoxItems}"
                      SelectedIndex="{Binding Value ,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ObjectToIntConverter}}"
                      IsEnabled="{Binding IsEditable}"
                      ToolTip="{Binding Tooltip, FallbackValue='Please select an item.'}" />
        </DataTemplate>
        <!-- Defining ParameterTemplateSelector-->
        <TemplateSelector:ParameterTemplateSelector x:Key="ParameterTemplateSelector"
                                                    NumberTemplate="{StaticResource NumberTemplate}"
                                                    ComboBoxTemplate="{StaticResource ComboBoxTemplate}"
                                                    CheckBoxTemplate="{StaticResource CheckBoxTemplate}" />
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="0.15*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="45*" />
                <ColumnDefinition Width="55*" />
            </Grid.ColumnDefinitions>
            <!--# TOP VIEW-->
            <!--# TOP LEFT VIEW -->
            <GroupBox Grid.Column="0"
                      Header="{Binding LanguageResources[Plasma], FallbackValue='PLASMA'}"
                      Padding="5"
                      Margin="5,0,5,5"
                      FontWeight="Bold">
                <Border BorderBrush="Gray"
                        BorderThickness="1"
                        CornerRadius="3"
                        Height="Auto"
                        Width="Auto">
                    <Viewbox Stretch="Fill">
                        <VSControls:VsDataGrid Grid.Column="0"
                                               AutoGenerateColumns="False"
                                               HeadersVisibility="Column"
                                               CanUserAddRows="False"
                                               Margin="2"
                                               Padding="4"
                                               ItemsSource="{Binding PlasmaItems}"
                                               Background="{DynamicResource MaterialDesignLightBackground}"
                                               Height="590"
                                               Foreground="Black"
                                               EnableRowVirtualization="False"
                                               EnableColumnVirtualization="False"
                                               IsReadOnly="True">
                            <!--<DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}" />
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center
                                </Style>
                            </DataGrid.CellStyle> "/>-->

                            <VSControls:VsDataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <!-- Hide the row if IsVisible is false -->
                                        <DataTrigger Binding="{Binding IsVisible}"
                                                     Value="False">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                        </DataTrigger>
                                        <!-- TitleBar Style -->
                                        <DataTrigger Binding="{Binding Type}"
                                                     Value="TitleBar">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="DataGridRow">
                                                        <TextBlock Background="{DynamicResource MaterialDesignCardBackground}"
                                                                   Foreground="{DynamicResource MaterialDesignBody}"
                                                                   Padding="10"
                                                                   HorizontalAlignment="Stretch"
                                                                   TextAlignment="Center"
                                                                   FontSize="14"
                                                                   Text="{Binding Parameter}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </VSControls:VsDataGrid.RowStyle>

                            <!-- Begin HEADER and BINDING of DataGrid-->
                            <VSControls:VsDataGrid.Columns>
                                <!-- TextColumn: displays the Parameter name -->
                                <DataGridTextColumn Binding="{Binding Parameter}"
                                                    Width="Auto"
                                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock VerticalAlignment="Center"
                                                       Text="{Binding DataContext.GridParameterTitle, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>

                                <!-- TemplateColumn: displays the Value -->
                                <DataGridTemplateColumn Width="Auto"
                                                        MinWidth="100">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.GridValueTitle, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplateSelector>
                                        <StaticResource ResourceKey="ParameterTemplateSelector" />
                                    </DataGridTemplateColumn.CellTemplateSelector>
                                </DataGridTemplateColumn>

                                <!-- TemplateColumn: displays the Unit -->
                                <DataGridTextColumn Binding="{Binding Unit}"
                                                    Width="Auto"
                                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.GridUnitTitle, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>

                            </VSControls:VsDataGrid.Columns>
                            <!-- End HEADER and BINDING of DataGrid-->
                        </VSControls:VsDataGrid>
                    </Viewbox>
                </Border>
            </GroupBox>

            <!--# TOP RIGHT VIEW -->
            <GroupBox Grid.Column="1"
                      Header="{Binding LanguageResources[System], FallbackValue='SYSTEM'}"
                      Padding="5"
                      Margin="5,0,5,5"
                      FontWeight="Bold">
                <Border BorderBrush="Gray"
                        BorderThickness="1"
                        CornerRadius="3"
                        Height="Auto">
                    <Viewbox Stretch="Fill">
                        <DataGrid Grid.Column="0"
                                  AutoGenerateColumns="False"
                                  HeadersVisibility="Column"
                                  CanUserAddRows="False"
                                  Margin="2"
                                  Padding="4"
                                  ItemsSource="{Binding SystemItems}"
                                  Background="{DynamicResource MaterialDesignLightBackground}"
                                  Height="590"
                                  Foreground="Black"
                                  EnableRowVirtualization="False"
                                  EnableColumnVirtualization="False"
                                  IsReadOnly="True">
                            <!--<DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}" />
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center
                                </Style>
                            </DataGrid.CellStyle> "/>-->

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <!-- Hide the row if IsVisible is false -->
                                        <DataTrigger Binding="{Binding IsVisible}"
                                                     Value="False">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                        </DataTrigger>
                                        <!-- TitleBar Style -->
                                        <DataTrigger Binding="{Binding Type}"
                                                     Value="TitleBar">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="DataGridRow">
                                                        <TextBlock Background="{DynamicResource MaterialDesignCardBackground}"
                                                                   Foreground="{DynamicResource MaterialDesignBody}"
                                                                   Padding="10"
                                                                   HorizontalAlignment="Stretch"
                                                                   TextAlignment="Center"
                                                                   FontSize="14"
                                                                   Text="{Binding Parameter}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                            <!-- Begin HEADER and BINDING of DataGrid-->
                            <DataGrid.Columns>
                                <!-- TextColumn: displays the Parameter name -->
                                <DataGridTextColumn Binding="{Binding Parameter}"
                                                    Width="Auto"
                                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock VerticalAlignment="Center"
                                                       Text="{Binding DataContext.GridParameterTitle, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>

                                <!-- TemplateColumn: displays the Value -->
                                <DataGridTemplateColumn Width="Auto"
                                                        MinWidth="100">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.GridValueTitle, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplateSelector>
                                        <StaticResource ResourceKey="ParameterTemplateSelector" />
                                    </DataGridTemplateColumn.CellTemplateSelector>
                                </DataGridTemplateColumn>

                                <!-- TemplateColumn: displays the Unit -->
                                <DataGridTextColumn Binding="{Binding Unit}"
                                                    Width="Auto"
                                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DataContext.GridUnitTitle, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>

                            </DataGrid.Columns>
                            <!-- End HEADER and BINDING of DataGrid-->
                        </DataGrid>
                    </Viewbox>
                </Border>
            </GroupBox>
        </Grid>
        <!--# BOTTOM VIEW -->
        <Border Grid.Row="1"
                BorderBrush="Gray"
                BorderThickness="1"
                CornerRadius="3"
                Height="Auto"
                Margin="5,2,5,5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*" />
                    <ColumnDefinition Width="50*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0"
                            Orientation="Horizontal"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Margin="5">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Height"
                                    Value="" />
                        </Style>
                    </StackPanel.Resources>

                    <!-- LEAK CHECK Button -->
                    <controls:ExtendedVsButton Margin="0,5,5,0"
                                          Text="Leak Check"
                                          Command="{Binding LeakCheckCommand}" />


                    <!-- TOWER LAMP Button -->
                    <controls:ExtendedVsButton Margin="0,5,5,0"
                                          Text="{Binding LanguageResources[TowerLamp], FallbackValue='Tower Lamp'}"
                                          Command="{Binding TowerLampCommand}" />
                </StackPanel>

                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Margin="5">
                    <!-- SAVE Button -->
                    <controls:ExtendedVsButton Width="120"
                                          Margin="0,5,5,0"
                                          Text="Save"
                                          ImageSource="/Resources/Icons/Save.png"
                                          Command="{Binding SaveCommand}" />

                    <!-- CANCEL Button -->
                    <controls:ExtendedVsButton Width="120"
                                          Margin="0,5,5,0"
                                          Text="Cancel"
                                          ImageSource="/Resources/Icons/Cancel.png"
                                          Command="{Binding CancelCommand}" />
                </StackPanel>
            </Grid>

        </Border>

    </Grid>
</UserControl>
